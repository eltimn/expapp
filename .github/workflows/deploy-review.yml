name: Deploy to Review

on:
  workflow_dispatch:
  workflow_call:

env:
  REGISTRY: us-docker.pkg.dev/expapp-pulumi/expapp
  IMAGE_NAME: expapp
  # REGISTRY: ghcr.io
  # IMAGE_NAME: ${{ github.repository }}

jobs:
  deploy:
    permissions:
      deployments: write
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    environment: review
    steps:
      - uses: actions/checkout@v2

      - id: slugify
        uses: eltimn/slugify-action@v1.5

      - name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v0
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - uses: actions/setup-node@v2
        with:
          node-version: 16

      - run: npm install
        working-directory: ./pulumi

      - name: Install pulumi
        uses: pulumi/setup-pulumi@v2
        with:
          pulumi-version: ^3.0.0

      - name: Create stack
        run: node create-stack.js
        working-directory: ./pulumi/scripts
        env:
          STACK_NAME: "review-${{ steps.slugify.outputs.branch }}"
          GCP_LOCATION: "us"
          # GCP_REGION: "us-west1"
          # GIT_BRANCH: ${{ steps.slugify.outputs.branch }}
          # GIT_SHA: ${{ steps.slugify.outputs.sha }}
          IMAGE_NAME: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.slugify.outputs.branch }}
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

      - name: Deploy stack
        uses: pulumi/actions@v3
        with:
          command: up
          stack-name: "review-${{ steps.slugify.outputs.branch }}"
          work-dir: ./pulumi
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}


      # - id: 'deploy'
      #   uses: 'google-github-actions/deploy-cloudrun@v0'
      #   with:
      #     service: 'hello-cloud-run'
      #     image: 'gcr.io/cloudrun/hello'

      # - name: 'Use output'
      #   run: 'curl "${{ steps.deploy.outputs.url }}"'


      # - name: Set domain
      #   id: set-domain
      #   run: |
      #     echo "::set-output name=domain::${{ env.GITHUB_HEAD_REF_SLUG_URL }}.my-app.com"

      # - name: start deployment
      #   uses: bobheadxi/deployments@v1
      #   id: deployment
      #   with:
      #     step: start
      #     token: ${{ github.token }}
      #     env: review
      #     payload: >-
      #       {
      #         "action": "${{ github.event.action }}",
      #         "label": "${{ env.GITHUB_HEAD_REF_SLUG_URL }}"
      #       }

      # - name: Echo inputs
      #   run: |
      #     echo "Ref Name: ${{ github.ref_name }}"
      #     echo "Environment: ${{ github.event.inputs.environment }}"

      # - name: update deployment status
      #   uses: bobheadxi/deployments@v1
      #   if: always()
      #   with:
      #     step: finish
      #     token: ${{ github.token }}
      #     status: ${{ job.status }}
      #     env: ${{ steps.deployment.outputs.env }}
      #     deployment_id: ${{ steps.deployment.outputs.deployment_id }}
      #     env_url: https://${{ steps.set-domain.outputs.domain }}
